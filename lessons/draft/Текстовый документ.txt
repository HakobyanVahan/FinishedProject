                    LESSON 2
            <p>This is a text 1</p>
		<span>This is a text 3</span>
		<p>This is a text 2</p>
		<span>This is a text 3</span>
		<h1>This is a h1 tag</h1>
		<h2>This is a h2 tag</h2>
		<h3>This is a h3 tag</h3>
		<h4>This is a h4 tag</h4>
		<h5>This is a h5 tag</h5>
		<h6>This is a h6 tag</h6>
		
 		<p>This is a description</p>
		<p>This is a <b>description</b></p>
		
		<b>This is a b tag</b><br>
		<strong>This is a strong<br>text</strong>
		<i>This is a italic text</i> 
                         
                       LESSON 3   
            <em>This is a text</em><br>
		<abbr>HTML</abbr>
		<abbr>CSS</abbr><br>
		<del>This is a del teg</del><br>
		<u>This is a underline tag</u><br>
		<ins>This is a insert tag</ins></br>
		<q>This is a q tag</q><br>
		<blockquote>This is a blockquote tag</blockquote>
		<mark>This is a mark tag</mark><br>
		<small>This is a small tag</small>
		<p>H<sub>2</sub>O</p>
		<p>X<sup>2</sup>O</p>
		<time>18.11.2022 21:13</time>
		<address>
			Gayi street
		</address>
		<img src="https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg" alt="This is a three" width="400" height="200">

			Lesson 4

				<a href="tel:+37477456932">Call</a>
		<a href="mailto:test@mail.ru">Send message</a>
		<a href="./images/Image_created_with_a_mobile_phone.png" 
			download="test">download
		</a>
		<p style="color: orange;">
			This is a p tag
		</p>
		<p style="color: green;">
			This is a p tag
		</p>
		<p style="color: #904061;">
			This is a p tag
		</p>
		<p style="color: rgb(20, 140, 130);">
			This is a p tag
		</p>
		<p style="color: rgb(20, 140, 130); font-size: 25px;">
			This is a p tag
		</p>
		<p style="font-weight: 700;">
			This is a p tag
		</p>
		<p style="font-weight: 100;">
			This is a p tag
		</p>
		<p style="text-align: center;">
			This is a p tag
		</p>
		<p style="text-align: right;">
			This is a p tag
		</p>
		<p style="text-align: justify; width: 200px;">
			Lorem Ipsum is simply dummy text
			of the printing and typesetting industry.
			Lorem Ipsum has been the industry's
			standard dummy text ever since the 1500s,
			when an unknown printer took a galley of
			type and scrambled it to make a type 
			specimen book. It has survived not only
			five centuries, but also the leap into 
			electronic typesetting, remaining essentially
			unchanged. It was popularised in the 1960s
			with the release of Letraset sheets 
			containing Lorem Ipsum passages, and 
			more recently with desktop publishing
			software like Aldus PageMaker
			including versions of Lorem Ipsum.
		</p>
		<p style="text-transform: uppercase;">this is a text</p>
		<p style="text-transform: capitalize;">this is a text</p>
		<p style="text-transform: lowercase;">THIS IS A TEXT</p>
		<p style="text-indent: 25px; width: 200px;">
			Lorem Ipsum is simply dummy text of
			the printing and typesetting industry.
			Lorem Ipsum has been the industry's
			standard dummy text ever since the 1500s,
		</p>
		<p style="word-spacing: 20px;">
			Lorem Ipsum is simply dummy text
			of the printing and typesetting industry.
			Lorem Ipsum has been the industry's standard
			dummy text ever since the 1500s,
		</p>
		<p style="letter-spacing: 20px;">
			Lorem Ipsum is simply dummy text
			of the printing and typesetting industry.
			Lorem Ipsum has been the industry's standard
			dummy text ever since the 1500s,
		</p>
		<p style="line-height: 20px; width: 200px;">
			Lorem Ipsum is simply dummy text
			of the printing and typesetting industry.
			Lorem Ipsum has been the industry's standard
			dummy text ever since the 1500s,
		</p>
		<p style="font-style: italic;">
			Lorem Ipsum is simply dummy text
			of the printing and typesetting industry.
			Lorem Ipsum has been the industry's standard
			dummy text ever since the 1500s,
		</p>
		<p style="font-style: normal;">
			Lorem Ipsum is simply dummy text
			of the printing and typesetting industry.
			Lorem Ipsum has been the industry's standard
			dummy text ever since the 1500s,
		</p>
	

               Lesson 5

		<p style="text-decoration-line: underline;">This is a text</p>
		<p style="text-decoration-line: overline;">This is a text</p>
		<p style="text-decoration-line: line-through;">This is a text</p>
		<a href="#" style="text-decoration-line:none;">Link</a>
		<p style="text-decoration-line: line-through; text-decoration-style:solid;">
			This is a text
		</p>
		<p style="text-decoration-line: line-through; text-decoration-style:dashed;">
			This is a text
		</p>	
		<p style="text-decoration-line: line-through; text-decoration-style:dotted;">
			This is a text
		</p>
		<p style="text-decoration-line: line-through; text-decoration-style:double;">
			This is a text
		</p>
		<p style="text-decoration-line: line-through; 
		           text-decoration-style:double; 
				   text-decoration-color:red;">
			This is a text
		</p>
		<p style="text-decoration: line-through double green;">This is a text</p>
		<p style="text-shadow: -2px -2px 5px red, -5px -5px 5px blue, -5px -5px 5px ;">
			This is a shadow text
		</p>
		<ul> 
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
		</ul>
		<ol>
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
		</ol>
	    <ul style="list-style-type: decimal;">
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
		</ul>
		<ol style="list-style-type: circle;">
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
		</ol>
		<ul style="list-style-type: square;">
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
		</ul>
		<ul style="list-style-type: none;">
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
		</ul>
		<ul style="list-style-type: armenian;">
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
			<li>Banana</li>
		</ul>
		<ul style="list-style-position: inside;">
			<li>Apple</li>
			<li>Orange</li>
			<li>Banana</li>
			<li>Banana</li>
		</ul>
		<dl>
			<dt>Samsung</dt>
			<dd>This is a telephone</dd>
			<dt>Del</dt>
			<dd>This is a computer</dd>
			<dd>Made in <abbr>USA</abbr></dd>
			
		</dl>

			Lesson 6

		<head>
		<style>
			/*table{
				border:1px solid black;
				border-collapse: collapse;
				border-collapse: separate;
				border-spacing: 5px;
				border-spacing: 5px 15px;
				width: 150px;
				table-layout: fixed;
			}*/
			
			/*td{
				border: 1px solid black;
			}*/
			
			table{
				border:1px solid black;
			}
			td{
				border:1px solid black;
			}
		</style>
	</head>
	<body>
		<!-- <table> -->
			<!-- <tr> -->
				<!-- <td>row 1 cell 1 efgfgfgfgefgfgffg</td> -->
				<!-- <td>row 1 cell 2</td> -->
				<!-- <td>row 1 cell 3</td> -->
				<!-- <td>row 1 cell 4</td> -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <td>row 2 cell 1</td> -->
				<!-- <td>row 2 cell 2</td> -->
				<!-- <td>row 2 cell 3</td> -->
				<!-- <td>row 2 cell 4</td> -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <td>row 3 cell 1</td> -->
				<!-- <td>row 3 cell 2</td> -->
				<!-- <td>row 3 cell 3</td> -->
				<!-- <td>row 3 cell 4</td> -->
			<!-- </tr> -->
		<!-- </table> -->
		<table>
			<tr>
				<td rowspan="2">1.1</td>
				<td colspan="3">1.2</td>
				<td rowspan="4">1.5</td>
			</tr>	
			<tr>
				<td>2.2</td>
				<td rowspan="3">2.3</td>
				<td>2.4</td>
			</tr>
			<tr>
				<td>3.1</td>
				<td>3.2</td>
				<td>3.4</td>
			</tr>
			<tr>
				<td colspan="2">4.1</td>
				<td >4.4</td>                
			</tr>
		</table>
		
		Lesson 7
	
	<!DOCTYPE html>
<html>
	<head>
		<style>
			
			/*table{
				border-collapse: collapse;
			}
			th{
				background-color: #dededc;
			}
			td{
				width:50px;
				height:50px;
			}*/
			
			/*table{
				border:1px solid black;
				/*caption-side: top;*/
				caption-side: bottom;
				/*empty-cells: hide;*/
				empty-cells: show;
			}
			td{
				border:1px solid black;
			}*/
		</style>
	</head>
	<body>
		<!-- <table> -->
			<!-- <tr> -->
				<!-- <th></th> -->
				<!-- <th>A</th> -->
				<!-- <th>B</th> -->
				<!-- <th>C</th> -->
				<!-- <th>D</th> -->
				<!-- <th>E</th> -->
				<!-- <th>F</th> -->
				<!-- <th>G</th> -->
				<!-- <th>H</th> -->
				<!-- <th></th> -->
			<!-- </tr>	 -->
			<!-- <tr> -->
				<!-- <th>8</th> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <th>8</th> -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <th>7</th> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
				<!-- <th>7</th> -->
			<!-- </tr>	 -->
			<!-- <tr> -->
				<!-- <th>6</th> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <th>6</th> -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <th>5</th> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
				<!-- <th>5</th>	 -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <th>4</th> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <th>4</th> -->
			<!-- </tr>	 -->
			<!-- <tr> -->
				<!-- <th>3</th> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
				<!-- <th>3</th>	 -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <th>2</th> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <td style="background-color:black;"></td> -->
				<!-- <td style="background-color:white;"></td> -->
				<!-- <th>2</th> -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <th>1</th> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
					<!-- <td style="background-color:white;"></td> -->
					<!-- <td style="background-color:black;"></td> -->
				<!-- <th>1</th>	 -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <th></th> -->
				<!-- <th>A</th> -->
				<!-- <th>B</th> -->
				<!-- <th>C</th> -->
				<!-- <th>D</th> -->
				<!-- <th>E</th> -->
				<!-- <th>F</th> -->
				<!-- <th>G</th> -->
				<!-- <th>H</th> -->
				<!-- <th></th> -->
			<!-- </tr> -->
		<!-- </table> -->
		<!-- <table> -->
			<!-- <thead> -->
				<!-- <tr> -->
					<!-- <th>Եկամուտ</th> -->
					<!-- <th>Հարկեր</th> -->
					<!-- <th>Աշխատավարձ</th> -->
				<!-- </tr> -->
			<!-- </thead> -->
			<!-- <tbody> -->
				<!-- <tr> -->
					<!-- <td>150.000</td> -->
					<!-- <td>120.000</td> -->
					<!-- <td>75.000</td> -->
				<!-- </tr> -->
				<!-- <tr> -->
					<!-- <td>170.000</td> -->
					<!-- <td>150.000</td> -->
					<!-- <td>75.000</td> -->
				<!-- </tr> -->
				<!-- <tr> -->
					<!-- <td>130.000</td> -->
					<!-- <td>130.000</td> -->
					<!-- <td>75.000</td> -->
				<!-- </tr> -->
			<!-- </tbody> -->
			<!-- <tfoot> -->
				<!-- <tr> -->
					<!-- <th>450.000</th> -->
					<!-- <th>300.000</th> -->
					<!-- <th>225.000</th> -->
				<!-- </tr> -->
			<!-- </tfoot> -->
		<!-- </table> -->
		<!-- <table> -->
			<!-- <caption>Table caption</caption> -->
			<!-- <tr> -->
				<!-- <td>Item 1</td> -->
				<!-- <td></td> -->
				<!-- <td>Item 1</td> -->
				<!-- <td>Item 1</td> -->
			<!-- </tr> -->
			<!-- <tr> -->
				<!-- <td>Item 1</td> -->
				<!-- <td>Item 1</td> -->
				<!-- <td></td> -->
				<!-- <td>Item 1</td> -->
			<!-- </tr> -->
		<!-- </table> -->
		<form method="post">
			<input type="text" name="login">
			<input type="password" name="password">
			<input type="email" name="email-address">
			<input type="submit">
		</form>
	</body>
</html>

	Lesson 8

	<form method="post" id="pass1" autocomplete="off">
			<label>Login
				<input type="text" name="login" placeholder="Login" >
			</label>
			<label for="pass">Password</label>
			<input type="password" id="pass" name="password" placeholder="Password">
			<input type="email" name="email-address" placeholder="Email-Address" value="example@gmail.com">
			<input type="number" name="Age" placeholder="Age" min="0" max="100"><br>
			<input type="tel" name="Phone_Number" value="+374"><br>
			<input type="Search" name="_Search"><br>
			<input type="url" name="url"><br>
			<label>
				<input type="radio" name="gender" value="Male">
				Male
			</label>	
			<label>
				<input type="radio" name="gender" checked value="female">
				Female
			</label><br>
			<label>
				<input type="checkbox" name="profession" value="Driver">
				Driver
			</label>
			<label>
				<input type="checkbox" checked name="profession" value="Developer">
				Developer
			</label>
			<label>
				<input type="checkbox" name="profession" value="Lower">
				Lower
			</label>
			<label>
				<input type="checkbox" name="profession" value="Doctor">
				Doctor
			</label>
			<input type="submit" value="Save changes">
		</form>
		
	Lesson 9
	
	<!DOCTYPE html>
<html lang="en">
	<head>
		<style>
			
		</style>
	</head>
	<body>
		<form>
			<input type="file" accept=".jpg,.png" multiple name="image"><br>
			<input type="color" name="color">
			<input type="range" name="value" min="0" max="100" value="30"><br>
			<input type="date" name="birthday" min="2022-12-25" max="2023-01-18" value="2022-12-18">
			<input type="datetime-local" name="birthday">
			<input type="month" name="month">
			<input type="week" name="week">
			<input type="time" name="time">
			<input type="reset" value="Reset">
			<input type="submit" value="Save changes">
			<input type="button" value="Button">
			<input type="text" required name="name" maxlength="10">
			<input type="text" disabled name="lastname">
			<input type="text" readonly name="adress"><br>
			<textarea name="comment" rows="2" cols="14"></textarea>
			<fieldset>
				<legend>Group</legend>
				<select name="year">
					<optgroup label="Armenia">
						<option hidden>Select a year</option>
						<option>2022</option>
						<option>2021</option>
						<option>2020</option>
						<option>2019</option>
						<option>2018</option>
						<option>2017</option>
					</optgroup>	
				</select>
			</fieldset>
			<br>
			<button>Save</button>
			<button type="reset" disabled>Reset</button>
			<button type="button" disabled >Button</button>
		</form>
		<form method="post" id="pass1" autocomplete="off">
			<label>Login
				<input type="text" name="login" placeholder="Login" >
			</label>
			<label for="pass">Password</label>
			<input type="password" id="pass" name="password" placeholder="Password">
			<input type="email" name="email-address" placeholder="Email-Address" value="example@gmail.com">
			<input type="number" name="Age" placeholder="Age" min="0" max="100"><br>
			<input type="tel" name="Phone_Number" value="+374"><br>
			<input type="Search" name="_Search"><br>
			<input type="url" name="url"><br>
			<label>
				<input type="radio" name="gender" value="Male">
				Male
			</label>	
			<label>
				<input type="radio" name="gender" checked value="female">
				Female
			</label><br>
			<label>
				<input type="checkbox" name="profession" value="Driver">
				Driver
			</label>
			<label>
				<input type="checkbox" checked name="profession" value="Developer">
				Developer
			</label>
			<label>
				<input type="checkbox" name="profession" value="Lower">
				Lower
			</label>
			<label>
				<input type="checkbox" name="profession" value="Doctor">
				Doctor
			</label>
			<input type="submit" value="Save changes">
		</form>
	</body>
</html>

	Lesson 10
<!DOCTYPE html>
<html lang="en">
	<head>
		<style>
			/*div{
				background-color:green;
				width:200px;
				height:200px;
				margin-left: 50px;
				margin-top: 30px;
				margin-bottom:45px;
				margin: 30px 0 45px 50px;
				margin:0 auto;
			}
			p{
				margin-top:45px;
			}
			span{
				margin-right:45px;
				margin-left:45px;
			}*/
			
			/*div{
				width:200px;
				height:200px;
				background-color:orange;
				/*padding-top:40px;
				padding-left: 10px;
				padding-right:30px;
				padding-bottom: 20px;
				padding:40px 30px 20px 10px;
				border:3px solid blue;
				box-sizing: content-box;
				box-sizing:border-box;
			}*/
			
			div{
				
				/*float:right;*/
				/*float:none;*/
			}
		</style>
	</head>
	<body>
		<!-- <div> -->
			<!-- This is a div tag -->
		<!-- </div> -->
		<!-- <p>This is a p tag</p> -->
		<!-- <span>This is a span</span> -->
		<!-- <span>This is a span</span> -->
		<!-- <div> -->
			<!-- This is a div tagsjh ss hsjkdh dkj hdsh sajhdsj kh jasdassds -->
		<!-- </div> -->
		<div style="width:200px;
				height:200px;
				background-color:orange;
				margin-bottom:10px;
				float:left;
				margin-right: 15px;">This is block 1</div>
		<div style="width:200px;
				height:200px;
				background-color:orange;
				margin-bottom:10px;
				float:left;
				margin-right: 15px;">This is block 2</div>
		<div style="clear:left;"></div>
		<h1>This is a title</h1>
	</body>
</html>	

		Lesson 11
		   HTML
<!DOCTYPE html>
<html lang="en">
	<head>
		<style>
			/* div {
				width: 150px;
				height: 170px;
				padding: 15px;
				border: 5px solid black;
				background-color: orange;
				box-sizing: border-box;
			} */
		</style>
		<link rel="stylesheet" href="./css/style.css">
		<!-- <link rel="stylesheet" href="./css/all.css"> -->
	</head>
	<body>
		<!-- <div>This is a text</div> -->
		<!-- <p hidden>This is a text</p> -->
		<!-- <p class="text-color text-align-c">This is a text</p> -->
		<!-- <b class="text-color">This is ab tag</b> -->
		<!-- <span class="text-color">This is a span tag</span> -->
		<!-- <h1 class="text-align-c">This is a title</h1> -->
		<!-- <div class="block">this is a div tag</div> -->
	
		<!-- <p id="p-el" class="text-color">This is a p tag</p> -->
		<!-- <div class="c-blue c-red">This is adiv tag</div> -->
		
		<div id="up">
			<a href="#block-1">Block 1</a>
			<a href="#block-2">Block 2</a>
			<a href="#block-3">Block 3</a>
		</div>
		<div style="height: 700px;"></div>
		
		<div id="block-1" class="bg-orange h-700">Block 1</div>
		<div id="block-2" class="bg-blue h-700">Block 2</div>
		<div id="block-3" class="bg-red h-700">Block 3</div>
		<a href="#up">Text</a>
	</body>
</html>

			CSS
/* p { */
	/* color: red; */
/* } */
/* .text-color { */
	/* color: blue; */
/* } */
/* .text-align-c { */
	/* text-align: center; */
/* } */
/* .block { */
	/* text-align: center; */
	/* color: white; */
	/* background-color: orange; */
	/* border: 1px solid; */
/* } */
/* #p-el { */
	/* color: red; */
/* } */
/* .c-red { */
	/* color: red; */
/* } */
/* .c-blue { */
	/* color: blue; */
/* } */
html {
	scroll-behavior: smooth;
	/* border-radius: 5px; */
}
.h-700 {
	height: 700px;
}
.bg-orange {
	background-color: orange;
}
.bg-blue {
	background-color: blue;
}
.bg-red {
	background-color: red;
}


		Lesson 12
		  HTML
<!-- <div class="d-inline">This is a div tag</div> -->
		<!-- <p class="d-inline">This is a p tag</p> -->
		
		<!-- <i class="d-block">This is a i tag</i> -->
		<!-- <b class="d-block">This is a b tag</b> -->
		
		<!-- <h1 class="d-inline-block">This is a h1 tag</h1> -->
		
		<!-- <p class="d-none">This is a p tag</p> -->
		
		<!-- <div style="padding-left:40px;"> -->
			<!-- <span class="d-list-item">Menu 1</span> -->
			<!-- <span class="d-list-item">Menu 2</span> -->
			<!-- <span class="d-list-item">Menu 3</span> -->
			<!-- <span class="d-list-item">Menu 4</span> -->
		<!-- </div> -->
		
		<!-- <div class="d-table"> -->
			<!-- <div class="d-table-row"> -->
				<!-- <span class="d-table-cell">cell 1</span> -->
				<!-- <span class="d-table-cell">cell 2</span> -->
				<!-- <span class="d-table-cell">cell 3</span> -->
				<!-- <span class="d-table-cell">cell 4</span> -->
			<!-- </div> -->
			<!-- <div class="d-table-row"> -->
				<!-- <span class="d-table-cell">cell 1</span> -->
				<!-- <span class="d-table-cell">cell 2</span> -->
				<!-- <span class="d-table-cell">cell 3</span> -->
				<!-- <span class="d-table-cell">cell 4</span> -->
			<!-- </div> -->
			<!-- <div class="d-table-row"> -->
				<!-- <span class="d-table-cell">cell 1</span> -->
				<!-- <span class="d-table-cell">cell 2</span> -->
				<!-- <span class="d-table-cell">cell 3</span> -->
				<!-- <span class="d-table-cell">cell 4</span> -->
			<!-- </div> -->
		<!-- </div> -->
		
		<!-- <div class="d-inline-table"> -->
			<!-- <div class="d-table-row"> -->
				<!-- <span class="d-table-cell">cell 1</span> -->
				<!-- <span class="d-table-cell">cell 2</span> -->
				<!-- <span class="d-table-cell">cell 3</span> -->
				<!-- <span class="d-table-cell">cell 4</span> -->
			<!-- </div> -->
			<!-- <div class="d-table-row"> -->
				<!-- <span class="d-table-cell">cell 1</span> -->
				<!-- <span class="d-table-cell">cell 2</span> -->
				<!-- <span class="d-table-cell">cell 3</span> -->
				<!-- <span class="d-table-cell">cell 4</span> -->
			<!-- </div> -->
			<!-- <div class="d-table-row"> -->
				<!-- <span class="d-table-cell">cell 1</span> -->
				<!-- <span class="d-table-cell">cell 2</span> -->
				<!-- <span class="d-table-cell">cell 3</span> -->
				<!-- <span class="d-table-cell">cell 4</span> -->
			<!-- </div> -->
		<!-- </div> -->
		
		<!-- <div class="d-none">This is a div tag</div> -->
		<!-- <div class="visibility">This is a div tag</div> -->
		<!-- <p>This is a p tag</p> -->
		
		<!-- <div class="opacity">This is a div tag</div> -->
		<!-- <div class="opacity-1">This is a div tag</div> -->
		
		<!-- <div class="radius"></div> -->
		<!-- <div class="border"></div> -->

				CSS
/*.d-inline{
	display:inline;
}
.d-block{
	display:block;
}
.d-inline-block{
	display:inline-block;
}
.d-none{
	display:none;
}
.d-list-item{
	display:list-item;
	list-style:square;
}
.d-table{
	display:table;
	border:1px solid black;
}
.d-table-row{
	display:table-row;
}
.d-table-cell{
	display: table-cell;
	border:1px solid black;
}
.d-inline-table{
	display:inline-table;
}*/


/*.d-none{
	display:none;
	height:200px;
}
.visibility{
	visibility:hidden;
	visibility:visible;
	height:200px;
}*/


/*.opacity{
	height:200px;
	background-color:red;
	opacity: 0.5;
}
.opacity-1{
	height:200px;
	background-color:red;
	opacity: 0.2;
}*/


/*.radius{
	width:200px;
	height:200px;
	background-color:orange;
	border-top-left-radius: 10px;
	border-top-right-radius: 19px;
	border-bottom-right-radius: 25px;
	border-bottom-left-radius: 30px;
	border-radius:25px 30px 45px 10px;
	border-radius:100px;
	border-radius:50%;
}*/


/*.border{
	width:200px;
	height:200px;
	background-color:orange;
	border-top:5px solid black;
	border-bottom:4px double green;
	border-left:6px dashed blue;
	border-right:3px dotted yellow;
	border-radius:50%;
}*/

		Lesson 13
		  CSS


.bg-image{
	height:700px;
	background-image: url('../img/istockphoto-1297349747-170667a.jpg');
	background-repeat:no-repeat;
	/*background-repeat:repeat;
	background-repeat:repeat-x;
	background-repeat:repeat-y;
	background-size: 100% 100%;
	background-size:cover;
	background-size:contain;
	background-position:50px 100px;
	background-position:-100px -100px;
	background-position:50% 50%;*/
	background-position:top left;
	background-position:top right;
	background-position:bottom right 10px;
	background-position:center;
	background-position:top center;
}

		Lesson 14
		   HTML

<!DOCTYPE html>
<html>
	<head>
		<style></style>
		<link rel="stylesheet" href="./css/style.css">
	</head>
	<body>
		<!-- <div class="bg-color"></div> 
		<div class="overflow">
			<img src="./img/parashut.jpg" alt="Image">
		</div>
		<div class="parent">
			<div class="block-1 bg-green"></div>
			<div class="block-1 bg-orange"></div>
			<button>Text</button>
		</div> 
		<div class="title-block">
			<h1>This is a title</h1>
		</div>-->
		<div class="empty"></div>
		<!-- <div class="position">This is a text</div> -->
		<div class="position">
			<img src="./img/parashut.jpg" alt="Image">
			<p class="text">This is a text</p>
		</div>
		<div>This is a text</div>
		<div class="empty"></div>
	</body>
</html>

			CSS
/*.bg-color{
	background-color:red;
	width:300px;
	height:300px;
	border:10px dotted;
	padding:10px;
	background-clip: border-box;
	background-clip: padding-box;
	background-clip:content-box;


.overflow{
	width:200px;
	height:200px;
	border:1px solid;
	overflow:hidden;
	overflow:scroll;
	overflow:auto;
}

.parent{
	background-color:blue;
	display:inline-block;
	width:100%;
	height:200px;
	overflow:auto;
}

.block-1{
	width:200px;
	height:200px;
	background-color:green;
	float:left;
}

.bg-orange{
	background-color:orange;
}

.bg-green{
	background-color:green;
}

.title-block{
	background-color:blue;
	display:inline-block;
	width:100%;
}

h1{
	margin-top:100px;
}*/

.empty{
	height:1000px;
	background-color:blue;
}

.position{
	background-color:orange;
	position:relative;
	/* position:fixed; */
	/* position:static; */
	/* position:sticky; */
	/* top:100px; */
	/* bottom:100px; */
	/* top:0; */
	/* left:0; */
	/* right:0; */
	/* bottom:0; */
}

.text{
	position:absolute;
	top:0;
	color:white;
}

		Lesson 5
		   HTML
<!DOCTYPE html>
<html>
	<head>
		<style></style>
		<link rel="stylesheet" href="./css/style.css">
	</head>
	<body>
		<!-- <p class="text1 text2">This is a text</p>
		<p class="text1 text3" id="text">This is a text</p>	
		<div class="text1">This is a description</div>
		<p class="text1">
			<span>
				<a href="#">Link1</a>
			</span>
			<a href="#">Link2</a>
		</p>
		<span>This is a span tag</span>
		<b>This is a b tag</b>
		<small>This is a small tag</small>
		<div>
			<span>
				<a href="#">Link3</a>
			</span>
			This is a div tag
		</div> 
		
		<input type="text" name="name">
		<input type="password">
		
		<p lang="en">This is a text</p> 
		
		<ul>
			<li>Menu item 1</li>
			<li>Menu item 2</li>
			<li>Menu item 3</li>
			<li>Menu item 4</li>
			<li>Menu item 5</li>
			<li>Menu item 6</li>
			<li>Menu item 7</li>
			<li>Menu item 8</li>
			<li>Menu item 9</li>
			<li>Menu item 10</li>
			<li>Menu item 11</li>
		</ul>
		<div>
			<span></span>
			<b></b>
			<span></span>
			<span></span>
		</div> 
		
		<p>
			Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has
			been the industry's standard dummy text ever since the 1500s, when an unknown printer took 
			a galley of type and scrambled it to make a type specimen book. It has survived not only 
			five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
			It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum 
			passages, and more recently with desktop publishing software like Aldus PageMaker including 
			versions of Lorem Ipsum.
		</p> 
		
		<a href="https://www.google.com/">Link</a>
		<a href="sjdfhsdjifh">Link</a>
		<button>Link</button>
		<p>fddfsfsd</p> -->
	</body>
</html>


              CSS
*{
	
	box-sizing:border-box;
	margin:0;
} 

/*
.text1 a{
	color:orange;
}

div span a{
	color:green;
}

a{
	color:blue!important;

.text1 > span > a {
	color:blue;
}

p + div {
	background-color:orange;
}

p ~ div{
	background-color:orange;
}

.text1 ~ div{
	background-color:orange;
}

 b, span, small, small + div, .text1 > a {
	color:orange;
}

div.text1{
	color:green;
}

.text1.text2{
	color:blue;
}

p#text.text1.text3, div, small{
	color:pink;
}

input[type=text]{
	background-color:orange;
}

p[lang=en]{
	color:red;
}

html[lang=ru]{
	color:green;
}

ul > li:first-child {
	color:green;
}

ul > li:last-child, ul > li:first-child {
	color:green;
}

ul > li:nth-child(7), ul > li:nth-child(5){
	background-color:blue;
}

li:nth-child(2n + 5){
	background-color:blue;
}

li:nth-child(2n - 1){
	background-color:blue;
}

li:nth-last-child(3){
	background-color:blue;
}

li::marker{
	color:turquoise;
}

li:nth-child(7)::marker{
	color:red;
}

p::first-line{
	color:green;
}

p::first-letter{
	color:turquoise;
	font-size:32px;
}

a:visited{
	color:orange;
}

a:active{
	background-color:yellow;
}

button:active{
	background-color:yellow;
}

a:hover{
	background-color:yellow;
}

button:hover{
	background-color:yellow;
}*/

		Lesson 16

		   HTML
<!DOCTYPE html>
<html>
	<head>
		<style></style>
		<link rel="stylesheet" href="./css/style.css">
	</head>
	<body>
		<!-- <input type="text"> -->
		<!-- <p>This is a text</p> -->
		
		<!-- <input type="radio" checked> -->
		<!-- <input type="range" checked> -->
		<!-- <input type="checkbox" checked> -->
		<!-- <input type="checkbox"> -->
		
		<!-- <p lang="en">This is a p tag</p> -->
		<!-- <p lang="en"></p> -->
		<!-- <ul> -->
			<!-- <li>Item</li> -->
			<!-- <li>Item</li> -->
			<!-- <li>Item</li> -->
			<!-- <li>Item</li> -->
			<!-- <li>Item</li> -->
		<!-- </ul> -->
		
		<p class="not">Text</p>
		<p>Text</p>
		<p>Text</p>
		<p>Text</p>
		<p>Text</p>
		<p>Text</p>
		<p>Text</p>
	</body>
</html>

	Css
	/*input:valid{
	border:4px solid green;
}

input:invalid{
	border:4px solid red;
}

input:focus{
	outline:none;
}

input:focus:valid{
	outline:none;
}

p:hover{
	color:red;
}

input:disabled{
	cursor:zoom-in;
}

input:enabled{
	cursor:zoom-in;
}

input:checked{
	accent-color:red;
}

p:lang(en){
	color:red;
}

p:empty{
	display:none;
}

li::before{
	content:'start';
	color:gold;
}

li::after{
	content:'start';
	color:blue;
	margin-left:10px;
}*/

p:not(.not){
	cursor: (8 25), pointer;
}
	Fonts

	Html
<!DOCTYPE html>
<html>
	<head>
		<style></style>
		<!-- <link rel="preconnect" href="https://fonts.googleapis.com"> -->
		<!-- <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> -->
		<!-- <link href="https://fonts.googleapis.com/css2?family=Unbounded:wght@200;300;400;500;600;700;800;900&display=swap" rel="stylesheet"> -->
		<link rel="stylesheet" href="./css/style.css">
		<link rel="stylesheet" href="./fonts/unbounded/stylesheet.css">
		<link rel="stylesheet" href="./fonts/montserrat/stylesheet.css">
	</head>
	<body>
		<p class="unbounded">This is a p tag with font family</p>
		<p>This is a p tag with font family montserrat</p>
	</body>
</html>


	Lesson 17
        CSS
.block{
	width:100px;
	height:100px;
	background-color:green;
	transition-duration:1.2s, 0.6s ;
	transition-property:width, height, background-color;
	transition-timing-function:cubic-bezier(0, 1.72, 1, 0.56);
	transition-timing-function:linear;
	transition-delay: 2s 1s;
	transition: all 1.2s ease-in-out 3s;
	
}


.block:hover{
	width:150px;
	height:150px;
	background-color:blue;
}


.block:hover{
	transform:scale(1.5);
	transform:rotate(180deg) scale(1.5);
	transform: rotateX(45deg);
	transform:rotateY(45deg);
	transform:rotateX(45deg) rotateY(45deg);
	transform:rotateZ(90deg) rotateX(45deg);
	transform:translate(150px, 50px) rotate(45deg);
}

.block{
	width:100px;
	height:100px;
	background-color:green;
	animation-name:move;
	animation-duration:10s;
	animation-iteration-count:infinite;
	animation-delay:1s;
	animation-direction:reverse;
}

.block2{
	width:100px;
	height:100px;
	background-color:red;
	animation-name:move;
	animation-duration:2s;
	animation-iteration-count:infinite;
	animation-timing-function:linear;
	animation-delay:1s;
}

@keyframes move{
	from {opacity:1;}
	to {opacity:0.2; background-color:orange; margin-bottom:10px;}
}

@keyframes move{
	0%{
		 background-color:orange;
	}
	21%{
		 background-color:yellow;
	}
	
	38%{
		 background-color:blue;
	}
	
	65%{
		 background-color:black;
	}
	
	100%{
		 background-color:red;
	}
	
}

		FlexBox
*{
	box-sizing:border-box;
	margin:0;
	padding:0;
}
/*
.flex-container{
	background-color:blue;
	display:flex;
	height:500px;
	flex-direction:column;
	flex-direction:column-reverse;
	flex-direction:row-reverse;
	flex-direction:row;
	flex-wrap:wrap;
	flex-wrap:nowrap;
	justify-content:flex-end;
	justify-content:center;
	justify-content:space-between;
	justify-content:space-arond;
	justify-content:space-evenly;
	   justify-content:flex-start;
	   align-items:flex-end;
	   align-items:center;
	   align-items:baseline;
	   align-content:space-between;
	   align-content:space-around;
}

.child{
	background-color:gray;
	margin:10px; 
	padding:10px; 
	flex-basis:200px; 
} */

		Lesson 18

@media screen and (max-width:1200px){
	.block{
		background-color:red;
	}
}

@media screen and (max-width:900px){
	.block{
		background-color:orange;
	}
}

@media screen and (max-width:600px){
	.block{
		background-color:blue;
		width:300px;
	}
}

@media screen and (max-width:400px){
	.block{
		background-color:yellow;
	}
}

		Lesson 18

		  HTML
<!-- <header> -->
	<!-- <h1>This is a title</h1> -->
	<!-- </header> -->
	<!-- <nav> -->
	<!-- <a href="#">Link 1</a> -->
	<!-- <a href="#">Link 1</a> -->
	<!-- <a href="#">Link 1</a> -->
	<!-- <a href="#">Link 1</a> -->
	<!-- <a href="#">Link 1</a> -->
	<!-- </nav> -->
	<!-- <main> -->
	<!-- <section> -->
	<!-- <h2>This is a subtitle</h2> -->
	<!-- </section> -->
	<!-- <aside>This is a aside</aside> -->
	<!-- <article> -->
	<!-- <p>Thisis a blog article</p> -->
	<!-- </article> -->
	<!-- </main> -->
	<!-- <footer> -->
	<!-- <address> -->
	<!-- Gyumri Gayi street -->
	<!-- </address> -->
	<!-- </footer> -->
	<!-- <figure> -->
	<!-- <img src="./img/parashut.jpg" alt="image"> -->
	<!-- <figcaption>This is a image</figcaption> -->
	<!-- </figure> -->

	
	<meta charset="utf-8">
	<meta name="description" content="This is a mercedes">
	<meta name="keyword" content="apple samsung lg">
	<meta name="author" content="John Doe">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" href="./css/style.css">
	<link rel="icon" href="./img/placeholder.png">
	<title>Sevagir</title>
	<script></script>
	<noscript></noscript>


		CSS

/*.block{
	width:2cm;
	height:2cm;
	background-color:orange;
}

.block{
	width:20mm;
	height:20mm;
	background-color:orange;
}

.block{
	width:1in;
	height:1in;
	background-color:orange;
}

.block{
	width:72pt;
	height:72pt;
	background-color:orange;
}

.block{
	width:1em;
	height:1em;
	font-size:20px;
	background-color:orange;
}

html{
	font-size:20px;
}

.block{
	width:1rem;
	height:1rem;
	font-size:20px;
	background-color:orange;
}

.block{
	width:100vh;
	height:100vh;
	background-color:orange;
}

.block{
	width:100vw;
	height:100vw;
	background-color:orange;
	font-size:20vw;
}*/


	Vayte html css-i verji das(
		
/* 
.block,
.block1 {
    float: left;
    height: 100px;
}


.block {
    width: 700px;
    background-color: yellow;
}

.block1 {
    width: calc(100% - 700px);
    background-color: blue;
    width: max(50%, 200px, 2in, 10vh);
    width: min(50%, 200px, 2in, 10vh);
} 

img {
    width: 150px;
    height: 320px;
    object-fit: cover;
     object-fit: contain;
    object-position: 10px 20px;
} */

.block {
    width: 300px;
    height: 300px;
    margin: 50px;
    box-shadow: -20px -10px 5px 5px green, 10px 10px 10px 10px blue;
}


      JS VAR
	  // console.log("1");
// console.log("2");
// console.log("3");
// console.log("4");
// console.log("5");
// console.log("6");
// console.log("7");
// console.log("8");
// console.log("9");
// console.log("10");

// console.log('');

// console.log("*");
// console.log("**");
// console.log("***");
// console.log("****");

// console.log('');

// console.log(' ' + ' ' + ' ' + ' ' + ' ' + "*");
// console.log(' ' + ' ' + ' ' + ' ' + "***");
// console.log(' ' + ' ' + ' ' + "*****");
// console.log(' ' + ' ' + "*******");

// console.log('');

// console.log('****');
// console.log(' ' + '***');
// console.log(' ' + ' ' + '**');
// console.log(' ' + ' ' + ' ' + '*');

// console.log('');

// console.log(' ' + ' ' + ' ' + ' ' + ' ' + "*");
// console.log(' ' + ' ' + ' ' + ' ' + "***");
// console.log(' ' + ' ' + ' ' + "*****");
// console.log(' ' + ' ' + ' ' + ' ' + "***");
// console.log(' ' + ' ' + ' ' + ' ' + ' ' + "*");

// console.log('');

// console.log(' ' + ' ' + "*****");
// console.log(' ' + "*****");
// console.log("*****");

// console.log('');

// console.log('****');
// console.log('***');
// console.log('**');
// console.log('*');

// var num;
// console.log(num);
// num = 78;
// console.log(num + 13);
// console.log(num + true);
// console.log(num + '');

// var num = 12;
// var str = 'text';
// var boll = true;
// console.log(num + str);
// console.log(boll + num);
// console.log(boll || num);

// var num1 = 12;
// var num2 = 25;
// var num3 = 87;
// var string = 'text';
// var $null = null;
// var boll = false;
// var undefined = undefined;
// var text2 = '5text';
// var num9 = 56;
// var num10 = 64;

// console.log(num1);
// console.log(num2);
// console.log(string);
// console.log($null);
// console.log(text2);
// console.log(num9);
// console.log(boll);
// console.log(num10);
// console.log(num3);
// console.log(undefined);

// var a = 78;
// var b = 12;
// var c = 36;
// var sum = a + b + c;
// var sum = a + 'b' + c;
// console.log(sum);

// var a = 78, b = 12, c = 36, sum = a * b - c;
// console.log(sum);
// var num = 78;
// var num1 = num;
// num = num + 56;

// var num = 10;
// num = num + 5;
// num += 5;
// console.log(num);

// var num = '10';
// num *= 2;
// console.log(num);

	JS TIPERI POPOXUTYUN

//Poxenqky number-i Matemakakn gorcoxutyunneri mijocov
// var a = '45';
// a *= 1;
// a /= 1;
//a -= 0;

// var a = true;
// a *= 1;
// a += 0;

//Ancnenq number - + (unar) operatorov

// var num = 12;
// num = +'12'

// var boll = true;
// boll = +boll

//Ancnenq number- Number function - ov

// Number

//Kancninq STRING - i String function - i mijocov

// var a = 78;
// a = String(a);

// console.log(a);

//Kancninq boolean - i boolean - function - i mijocov;

// var a = 15;
// a = !a;
// a = Boolean(a)

// console.log(a);
// var num = 58;

		JS (IF, ELSE), (SWITCH, CASE)
/* if (true) {
     console.log(45);
}*/

// if (4>5) {
//     console.log('No');
// }

// if (4 === 4) {
//     console.log('Yes');

//     var x = 45
//     x += 12;
// }

// var num = +prompt('Greq tiv');
// var num2 = +prompt('Greq tiv');
// var num3 = +prompt('Greq tiv');
// // switch (num) {
//      case "1": console.log('YES');
//           break;
//      case true: console.log('YES');
//           break;
//      case 1: console.log('YES');
//           break;
//      case false: console.log('Yes');
//           break;
//      case null: console.log('Yes');
//           break;

// }

// switch (num % 2 == 0) {
//      case true: console.log('Yes');
//           break;
//      default: console.log('NO');
//           break;
// }

// switch (num % 10 == 8
//      ) {
//      case true: console.log('Yes');
//           break;
//      default: console.log('NO');
//           break;
// }

// switch (true) {
//      case num < num2 && num < num3: console.log(num);
//           break;
//      case num2 < num && num2 < num3: console.log(num2);
//           break;
//      case num3 < num2 && num3 < num: console.log(num3);
//           break;
// }

			JS LOOPS

// console.log('1');
// console.log('2');
// console.log('3');
// console.log('4');
// console.log('5');
// console.log('6');
// console.log('7');
// console.log('8');
// console.log('9');
// console.log('10');


// var i = 0;
// while (i < 10) {
//      console.log(i);
//      i++;
// }

// var i = 23;
// while (i < 87) {
//      console.log(i);
//      i++;
// }

// var i = 1;
// var symb = '*';
// while (i < 5) {
//      console.log(symb);
//      symb = symb + '*';
//      i++
// }

// var i = 0;
// debugger;
// do {
//      console.log(i);
//      i++;
// } while (i < 3)

// var i = 0;
// debugger;
// do{
//      console.log(i);
//      i++;
// }while(i > 3);

// var i = 23;
// do {
//      console.log(i);
//      i++;
// } while (i < 87);


// var i = 0;
// var num = 1;
// do {
//      num *= 2;
//      i++;
// } while (i < 12)

// console.log(num);


// var i = 0;
// var symb = '';

// do {
//      symb = symb + '*';
//      i++;
//      console.log(symb);
// } while (i < 4)

			JS FOR
//Հաշվիչ
// var num1 = +prompt('Greq tiv')
// var action = prompt('Greq nshan')
// var num2 = +prompt('Greq tiv')

// if (!isNaN(num1) && !isNaN(num2)) {
//      if (action === '+') {
//           console.log(num1 + num2);
//      } else if (action === '-') {
//           console.log(num1 - num2);
//      } else if (action === '*') {
//           console.log(num1 * num2);
//      } else if (action === '/') {
//           console.log(num1 / num2);
//      } else {
//           console.log('Nsheq +,-,* kam /');
//      }
// } else {
//      console.log('Nsheq tiv');
// }

//FOR LOOP\
;;
// debugger;
// for (var i = 0; i < 3; i++) {
//      console.log(i);
// }

// for (var i = 36; i < 109; i++) {
//      console.log(i);
// }

// var x = 1;

// for (var i = 0; i < 9; i++) {
//      x *= 2;
// }

// console.log(x);
// var x = '';

// for (var i = 0; i < 4; i++) {
//      x += '*';
//      console.log(x);
// }

// for(var i = 0; i < 3; i++){
//      for(var j = 0; j < 2; j++)
// }


			JS FUNCTION AND HOW STOP WHILE

// for (var i = 0; i < 11; i++) {
//     console.log(i);
//     break;
//     console.log('Hello');
// }

// for (var i = 0; i < 10; i++) {
//     if (i == 5) {
//         break;
//     }
//     console.log(i);
// }

// out: for (var i = 0; i < 10; i++) {
//     inner: for (var j = 0; j < 10; j++) {
//         console.log(j);
//         break out;
//     }
// }


// for (var i = 0; i < 10; i++) {
//     if (i === 5) {
//         continue;
//     }
//     console.log(i);
// }
'use strict';

// var y = 100;

// for (var x = 2; x < y; x++) {
//     if (x == 36 || x == 74 || x == 85 || x == 93) {
//         continue;
//     }
//     console.log(x);
// }

// FUNCTION

//1

// function test() {
//     console.log(true);
// }

// test();
// test();
// test();
// test();

//2

// function test(params) {
//     console.log(params + 10);
// }

// test(12);
// test(true);
// test(null);
// test('Hello');

//3
// function hello(params, params2) {
//     console.log(params * params2);
// }

// hello(12, 3);
// hello(85, 6);
// hello(100, 5);
// hello(); //undefined

//Թվի աստիճան

// function pow(num1, num2) {
//     var res = 1;
//     for (var i = 0; i < num2; i++) {
//         res *= num1;
//     }
//     console.log(res);
// }

// pow(3, 5);
// pow(2, 12);
// pow(3, 2);
// pow(9, 2);

//4
// function test(z) {
//     var y = 45
//     return y;
// }

// console.log(test());
// var x = test();
// console.log(x);

//5
// function test() {

// }

// console.log(test());

//6

// function test(num1) {
//     return null;
// }

// console.log(test(78));

//7

// function pow(num1, num2) {
//     var res = 1;
//     for (var i = 0; i < num2; i++) {
//         res *= num1;
//     }
//     return res;
// }

// var x = pow(3, 5) + pow(2, 12) + pow(3, 2) + pow(9, 2);

// console.log(x);

//8

// function test(num1, num2) {
//     return num1 * num2;
// }

// console.log((test(12, 2)));

// HETO KDZEM 

'use strict';

//Ստանալ թիվ վերադարձնել թվանշանների գումարը։

// function plus(gumar) {
//     var i = 0;
//     while (gumar > 0) {
//         i += gumar % 10;
//         gumar = parseInt(gumar / 10);
//     }

//     return i;
// }

// console.log(plus(458));

//Ստանալ թիվ վերադարձնել 'Yes' եթե թիվը զույգ է ևև 'No' հակառակ դեպքում։

// function even(num) {
//     if (num % 2 == 0) {
//         return 'Yes';
//     }
//     return 'No';
// }

// console.log(even(26));

//Ստանալ թիվ վերադարձնել 'Yes' եթե թիվը զույգ է ևև 'No' հակառակ դեպքում առանց պայմանի։
// function even(num) {
//     return num % 2 == 0;
// }

// console.log(even(32));

//Ստանալ 3 հատ թիվ վերադարձնել ամենապոքր թիվը։

// function minNum(num1, num2, num3) {
//     if (num1 < num2 && num1 < num3) {
//         return num1;
//     } else if (num2 < num1 && num2 < num3) {
//         return num2;
//     } else {
//         return num3;
//     }
// }

// console.log(minNum(2, 3, 0));

//Ստանալ թիվ վերադարձնել true եթե այն 'լողացող' կետով է և 'false' հակառակ դեպքում։

// function wholeNumber(num) {
//     return num != parseInt(num);
// }

// console.log(wholeNumber(45));

//Ռեկուրսիա

// function test(num) {
//     console.log(num);
//     if (num > 0) {
//         test(--num);
//     }
// }

// test(10);

// function test(num) {
//     if (num === 0) {
//         return 15;
//     }

//     test(--num);
// }

// test(3);

// function sum(num) {
//     if (num == 10) {
//         return num;
//     }

//     return num + sum(++num);
// }

// console.log(sum(1));

// function test(num) {
//     return function (bool) {
//         console.log(num);
//         console.log(bool);
//     }
// }

// var x = test(45);
// x(true);
// x();
// x();



//1

// var a = 10;

// function f1(params) {
//     console.log('global a = ' + a);
// }

// // f1();

// //2

// function f2(params) {
//     var x = 33;
//     console.log('local a = ' + x);
// }

// // f2();

// function createStep(n = 0) {
//     var count = n;
//     return function (params) {
//         count++;
//         console.log(count);
//     }
// }

// var step1 = createStep();
// var step2 = createStep(200);
// step1();
// step1();
// step1();
// step2();
// step1();
// step1();


//     OBJECTS

// var user = {};
// user.name = 'John';
// user.name = 'Mike';
// user.age = 25;
// user.gender = 'Male';
// user.nickname = null;

// var user = {};
// user['first name'] = 'John';
// user['age'] = 25;
// user[1] = true;
// user['gender'] = 'Male';

// console.log(user['first name']);
// console.log(user.gender);
// console.log(user.age);

// var car = {};
// car.name = 'BMW i8';
// car.placeofmanufacture = 'Germany';
// car.price = 144950;

// console.log(car.name);
// console.log(car.placeofmanufacture);
// console.log(car.price);

// var car = {};
// car['mark'] = 'Maybach';
// car['year of manufacture'] = 1909;
// car['price'] = '$62,995 - $96,995';

// console.log(car['mark']);
// console.log(car['year of manufacture']);
// console.log(car.price);

// var user = {
//     name: 'Mike',
//     age: 25,
//     gender: 'Male',
//     'last name': 'Smith',
//     1: true,
//     var: null
// };

// console.log(user.name);
// console.log(user[1]);
// console.log(user.var);

// user.age = 63;

// console.log(user.age);

// var user = {
//     name: 'John',
//     'last name': 'Smith',
//     age: 25,
//     child: {
//         name: 'Mike',
//         age: 2,
//         'last name': 'Smith'
//     }
// }

// console.log(user.child.name);
// console.log(user.child.age);

// console.log('name' in user);
// console.log('age' in user);
// console.log('last name' in user);
// console.log('last name' in user.child);
// console.log('email' in user);

// console.log(delete user.name);
// console.log(delete user['last name']);
// console.log(delete user[email]);

// var index = 1;

// var item = {
//     1: true,
//     2: 45,
//     3: 'Hello',
//     4: null,
//     10: false
// }


// // console.log(item[index]);

// for (var i = 1; i in item; i++) {
//     console.log(item[i]);
// }

// var user = {
//     name: 'Mike',
//     age: 12,
//     gender: 'Male',
//     52: true
// }

// for (var key in user) {
//     console.log(user[key]);
// }

var car1 = {};
car1['brand'] = 'Mercedec Maybach';
car1['year'] = 1902;
car1['Price'] = 62995;

var car2 = {
    brand: 'bmw i8',
    year: 2013,
    price: 1115000
}

for (var key in car1) {
    console.log(key + ': ' + car1[key]);
}

console.log('');

for (var key2 in car2) {
    console.log(key2 + ': ' + car2[key2]);
}

           ARRAYS

'use strict';
//    ARRAYS
// var arr = [];
// var arr1 = [78, true, null, 'hello', false, true, 96, 78, { name: 'Mike' }];

// console.log(arr1[4]);
// arr1[4] = 'Text';
// console.log(arr1);
// arr[0] = 78;
// arr[1] = 'text';
// arr[10] = false;

// console.log(arr);
// console.log(arr[8]);

// var arr1 = [78, true, null, 'hello', false, true, 96, 78, { name: 'Mike' }];
// console.log(arr1.length);
// arr1.length = 65;
// console.log(arr1);

// arr1.length = 3;
// console.log(arr1);

//While for array
// for (var i = 0; i < arr1.length; i++) {
//     console.log(arr1[i]);
// }


// var arr = [true, false, 10, 20, 30, 'hello', 40, 'js'];
// var sum = 0;
// for (var i = 0; i < arr.length; i++) {
//     if (typeof arr[i] === 'number') {
//         sum += arr[i];
//     }
// }
// console.log(sum);

// var arr1 = [78, true, null, 'hello', false, true, 96, 78, { name: 'Mike' }];
// for (var i = 0; i < arr1.length; i++) {
//     if (typeof arr1[i] === 'object' && arr1[i] !== null) {
//         console.log(arr1[i]);
//     }
// }


// var arr2 = [78, true, null, 'hello', false, true, 96, 78, { name: 'Mike' }];
// var arr1 = [];


// for (var i = 0; i < arr2.length; i++) {
//     arr1[i] = arr2[i];
// }

// console.log(arr1);

// var arr = [10, 20, 30];

// var arr = [78, true, null, 'hello', false, true, 96, 78, { name: 'Mike' }];

// for (var i in arr) {
//     console.log(i);
// }

// var arr = [78, true, null, 'hello', false, true, 96, 78, { name: 'Mike' }];
// var arr1 = [];

// for (var i = arr.length; i >=
//     0; i--) {
//     arr1[i - arr.length] = arr[i];
// }

// console.log(arr1);

		'use strict';

//Առանց երկրորդ մասսիվի reverse անել մասսիվի տարրերը
// var arr = [45, true, "hello", 21, null];

// for (let i = 0; i < parseInt(arr.length / 2); i++) {
//     var item = arr[i];
//     arr[i] = arr[arr.length - 1 - i];
//     arr[arr.length - 1 - i] = item;
// }

// console.log(arr);

// Պարզ թվեր

// for (var i = 3; i < 120; i++) {
//     var isPrime = true;
//     if (i % 2 != 0) {
//         for (var j = 2; j < i / 2; j++) {
//             if (i % j === 0) {
//                 isPrime = false;
//                 break;
//             }
//         }
//     } else {
//         isPrime = false;
//     }
//     if (isPrime) {
//         console.log(i);
//     }
// }

//Շրջանագծի երկարություն

// function circle(r) {
//     return 2 * (Math.PI * r);
// }

// console.log(circle(13.5));

// function s(r) {
//     return Math.PI * Math.pow(r, 2)
// }

// console.log(s(9));

//ARGUMENT

// function test(a, b ) {
//     console.log(arguments);
//     console.log(arguments[2]);
//     console.log(arguments.length);

//     for (var i = 0; i < arguments.length; i++) {
//         console.log(arguments[i]);
//     }
// }

// test(78, 45, true, 'hello', 'text', null);
// test(36, true, false, undefined);

//END

// function test(a, b, c) {
//     console.log(test.length);
// }

// test(78, 45);
//CALL
// var a = {
//     name: 'Mike'
// }
// var b = {
//     name: 'John'
// }
// function test(num1, num2, num3) {
//     console.log(this);
//     console.log(arguments);
//     console.log(num1, num2, num3);
// }

// test.call(a, 78, 23, true);
// test.call(b, 78, 23, true);
// test();
//END

//APPLY
// var a = {
//     name: 'Mike',
// };

// var arr = [78, 56, 32];

// function test(num1, num2, num3) {
//     console.log(this);
//     console.log(num1, num2, num3);
// }

// test.apply(a, arr);
//END

var arr = [78, 56, 32, 89, 45, 78, 654, 254, 102];
console.log(Math.max.apply(Math, arr));

function add() {

}

add.call(arr, true, 89, false);

console.log(arr.length + 1);

function search() {

}

search.call(arr, true)

'use strict';

// console.log(arr.toString());
// console.log(arr);

// console.log(arr.join());
// console.log(arr.join('-'));
// console.log(arr);

// var arr = [45, true, 'test', 96];
// var arr1 = [58, 'hello', 'Joe', true, { name: 'Mike' }];
// var newArray = arr.concat(arr1);
// var newArray = arr.concat(82, false, arr1);

// console.log(newArray);

// console.log(arr1 + arr);

// var arr1 = [58, 'hello', 'Joe', true, { name: 'Mike' }];
// console.log(arr1.slice(2));
// console.log(arr1.slice(2, 4));
// console.log(arr1.slice(-3, -1));
// console.log(arr1.slice(-4, -2));
// console.log(arr1.slice(-4));
// console.log(arr1.slice(4, 2));
// console.log(arr1.slice(3).join(''));

// var arr1 = [58, 'hello', 'Joe', true, { name: 'Mike' }];
// console.log(arr1.reverse());
// console.log(arr1);

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];
// console.log(arr.sort());

// console.log(arr.sort(function (a, b) {
//     // return a - b;
//     console.log(a, b);
// }));

// console.log(arr);

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];

// var newArray = arr.sort();

// console.log(newArray);

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];
// var item = arr.pop();
// console.log(item);

// console.log(arr);

// var count = arr.push(78, 'test', null, 36);

// console.log(arr);
// console.log(count);

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];
// console.log(arr.shift());

// console.log(arr);


// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];

// var count = arr.unshift(78, 'test', null, 36, [45, 78]);
// console.log(arr);
// console.log(count);

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];

// console.log(arr.splice(2, 2,'Text', [78, 32]));
// console.log(arr);

// var arr = [58, 'hello', 'Joe', true, 58, true, NaN, 46, { name: 'Mike' }];
// console.log(arr.indexOf(true, 4));
// console.log(arr.indexOf(false));

// var arr = [58, 'hello', 'Joe', true, 58, true, NaN, 46, { name: 'Mike' }];
// console.log(arr.lastIndexOf(true));
// console.log(arr.lastIndexOf(58, 3));

// var arr = [58, 'hello', 'Joe', true, 58, true, NaN, 46, { name: 'Mike' }];
// console.log(arr.indexOf(NaN));

// var arr = [58, 'hello', 'Joe', true, 58, true, NaN, 46, { name: 'Mike' }];
// console.log(arr.includes('Joe'));

// var arr = [58, 'hello', 'Joe', true, 58, true, NaN, 46, { name: 'Mike' }];
// console.log(arr.at(2)); //arr[2]
// console.log(arr.at(-1)); //arr[2]

//CallBack funkcia

// function test(f) {
//     f(78);
//     f(true);
//     f(false);
// }

// test(78);
// test(function (num1) {
//     console.log(num1);
// });
//END

// var arr = [58, 'hello', 'Joe', true, 58, true, NaN, 46, { name: 'Mike' }];

// arr.forEach(function (item, i, array) {
//     console.log(true);
//     console.log(item, i);
//     console.log(array);
// });

// var newArray = arr.map(function (item) {
//     return item;
// })

// console.log(newArray);

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];

// var newArray = arr.map(function (item) {
//     return item + 10;
// }).forEach(function (item) {
//     console.log(item);
// })

// console.log(newArray);

//Map - ի աշխատանքի սկզբունքը

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];

// function map(f) {
//     var newArray = [];
//     for (var i = 0; i < this.length; i++) {
//         newArray[i] = f(this[i], i, this);
//     }
//     return newArray;
// }

// var x = map.call(arr, function (item) {
//     return item + 10;
// });

// console.log(x);

// var arr = [1, 45, 36, 78, 69, 100, 405, 360, 12, 36];

// var newArray = arr.filter(function (item, i) {
//     return item > 80;
// })

// console.log(newArray);

//


// console.log(arr.toString());
// console.log(arr.join('.'));
// console.log(arr1.concat('barev'));
// console.log(arr.slice(5));
// console.log(arr.sort(function (a, b) {
//     return a - b;
// }));

// console.log(arr1.pop());
// arr.push(undefined);
// console.log(arr);
// console.log(arr.push(undefined));

// console.log(arr.splice(1, 1, 'text'));
// console.log(arr);

// var arr = [10, 20, true, false];

// console.log(arr.forEach(function (index, i, array) {
//     console.log(index);
//     console.log(i);
//     console.log(array);
// }));

// var empty = (arr.map(function (index, i, array) {
//     return index;
// }));

// console.log(empty);

// var empty = arr.filter(function (index) {
//     return index > 10;
// })

// console.log(empty);

//Սորտավորում

// var arr = [200, 50, 9, 45, 301, 74, 63, 95, 108, 35, 69];

// for (var i = 0; i < arr.length; i++) {
//     debugger;
//     for (var j = i + 1; j < arr.length; j++) {
//         if (arr[i] > arr[j]) {
//             var item = arr[i];
//             arr[i] = arr[j];
//             arr[j] = item;
//         }
//     }
// }

// console.log(arr);

//Տողի մեթոդներ

//Տողի հատկություն length
var str = 'Hello World';
// console.log(str.length);

//Concat մեթոդը
// console.log(str.concat('789', '45', 'text'));
// console.log(str);

//toUpperCase, toLowerCase
// console.log(str.toUpperCase());
// console.log(str.toLowerCase());

//charAt մեթոդ
// console.log(str.charAt(9));

//at մեթոդ
// console.log(str.at(-1));

//charCodeAt մեթոդ
// console.log(str.charCodeAt(1));

//fromCharCode
// console.log(String.fromCharCode(137));

//slice մեթոդ
// console.log(str.slice(2, 6));

//substring մեթոդ
// console.log(str.substring(7, 2));

//indexOf մեթոդ
// console.log(str.indexOf('d'));
// console.log(str.indexOf('Hello'));
// console.log(str.indexOf('l', 4));

//lastIndexOf մեթոդ
// console.log(str.lastIndexOf('l', 5));

//replace մեթոդ
// console.log(str.replace('r', 't'));

//replaceAll մեթոդ
// console.log(str.replaceAll('l', 't'));

//repeat մեթոդ
// console.log(str.repeat(5));

//split մեթոդ

// var strTwo = 'Hello world. My name is Mike'

// console.log(strTwo.split('a'));

// var str = 'this is a text';

//startsWith մեթոդ

// console.log(str.startsWith('this'));
// console.log(str.startsWith('this is a text'));
// console.log(str.startsWith('this is a Text'));
// console.log(str.startsWith('t'));

//endsWith մեթոդ
// console.log(str.endsWith('t'));
// console.log(str.endsWith('text'));
// console.log(str.endsWith('a text'));
// console.log(str.endsWith('A text'));

// var str = '            this is a text';

//trim մեթոդ

// console.log(str.trim());
// console.log(str.trimEnd());
// console.log(str.trimStart());

// var str = 'this is a text';
// console.log(str.bold());
// console.log(str.small());

//Թվի մեթոդ

//toString մեթոդ

// var x = 78;
// console.log(x.toString())
// console.log(x);

//toFixed մեթոդ

// var x = 78.654652;
// console.log(x.toFixed(2));
// console.log(x);

//toPrecision մեթոդ

// var x = 85.8795;
// console.log(x.toPrecision(5));
// console.log(x.toPrecision(1));

//toExponential մեթոդ

// var x = 78;
// console.log(x.toExponential());

//RegExp

// var pattern = /@/;
// var reg = /mail|gmail|yandex/;
// var email = 'test@mail.ru';
// var pass = 'dsfd saf d sfasdfadfa'
// console.log(email.search(pattern));
// console.log(pass.search(pattern));
// console.log(email.search(reg));
// console.log(pattern.test(pass));
// console.log(pattern.test(email));

// var pattern = /\//;
// var pattern = /\+/;
// var pattern = /\-/;
// var url = 'https://www.google.ru';
// console.log(pattern.test(url));

var pattern = /[abc]/;

//EcmaScript6
//Փոփոխականի հայտարարման let ձևը
// let test = 78;

// for(var i = 0; i < 5; i++){

// }

// console.log(i);

//Առաջին տարբերությունը let - ի  var - ից

// if (true) {
//     let test = 78;
// }

// console.log(test);

//Երկրորդ տարբերությունը let - ի  var - ից

// let x = 78;
// let x = true;

// console.log(x);

// let x = 78;
// if (true) {
//     let x = true;
//     console.log(x); //true
// }

// console.log(x); //78

// for (var i = 0; i < 5; i++) {
//     setTimeout(function () {
//         console.log(i);
//     }, 200);
// }

// for (let i = 0; i < 5; i++) {
//     setTimeout(function () {
//         console.log(i);
//     }, 200);
// }

//Const
// const x = 78;
// console.log(x + 12);

// x = true; //տալիս է error

// const arr = [];
// arr.push(78, true, false);
// arr.pop();
// arr = [] //false
// arr[0] = 45;
// console.log(arr);

// const obj = {};
// obj.name = 'Joe';
// console.log(obj);

//About Functions

// function test(a = 0, b = true) {
//     console.log(a, b);
// }

// test();
// test('test', 45);

// function test(...params) {
//     console.log(params);
// }

// test(78, 45, true, null)

// function test(a, b, ...arr) {
//     console.log(a, b);
//     console.log(arr);
// }

// test(78, 45, true, null);

//Arrow function

// let f = (a) => {
//     console.log(a);
// }

// f('test');

// let f = a => {
//     console.log(a);
// }

// f('test');

// let f = a => {
//     return a + ' text';
// }

// let x = f('test');

// console.log(x);

// let f = a => a + ' text';

// let x = f('test');

// console.log(x);

// let f = (...a) => {
//     console.log(a);
// }

// f(78, true, 'text')

// let arr = [78, 45, 65, 25, 96, 74, 321];
// arr.map(function (item) {
//     return item + 10;
// })

// arr.map(item => item + 10);
// arr.map((item) => { return item + 10 });

// let obj = {
//     name: 'Mike',
//     showName: () => {
//         console.log(this);
//     }
// }

// obj.showName();

// let obj = {
//     name: 'Mike',
//     showName: function () {
//         function f() {
//             console.log(this);
//         }
//         f();
//     }
// }

// obj.showName();


// let obj = {
//     name: 'Mike',
//     showName: function () {
//         let _this = this;
//         function f() {
//             console.log(_this);
//         }
//         f();
//     }
// }

// obj.showName();

// let arr = [78, 45, 65, 25, 96, 74, 321];

// let f = (a, b, c) => {
//     console.log(a, b, c);
// }

// f(...arr);
// console.log(Math.max(...arr));

// let arr1 = ['test', null];
// let arr = [78, 45, 65, ...arr1, 25, 96, 74, 321];
// console.log(arr);

// let arr = [78, 45, 65, 25, 96, 74, 321];
// // let arr1 = arr;
// let arr1 = [...arr];
// console.log(arr1);

// let obj = {
//     name: 'Joe',
//     age: 45
// }

// let obj1 = obj;
// let obj1 = { ...obj, email: 'test@mail.ru' };
// console.log(obj1);

// let arr = [78, 45, 65, 25, 96, 74, 321];
// let a = arr[0];
// let b = [1];
// let [a, b] = arr;
// console.log(a, b);

// let obj = {
//     name: 'Joe',
//     age: 45
// }

// let { name, age } = obj;
// console.log(name, age);

// let a = 'Hello';
// let b = 'World'
// console.log(a + b + '!');

// let a = 'Hello';
// let b = 'World'
// let str = `Hello ${b}! ${a} ${b}!`;

// console.log(str);

// let a = 'Hello' + '\n' + 'World';
// let b = 'World';
// console.log(a);

// let str = `Hello
// world`;
// console.log(str);

// let arr = [78, 45, 65, 25, 96, 74, 321];
// for (let item of arr) {
//     console.log(item);
// }

//OOP
// let user = {
//     name: 'Mike',
//     age: 12,
//     email: 'test@mail.ru',
//     phone_number: '+374778899',
// };

// function User(_name, _age, _email, _phone_number) {
//     this.name = _name;
//     this.age = _age;
//     this.email = _email;
//     this.phone_number = _phone_number;
//     this.showName = function () {
//         return this.name;
//     }
// }

// let user = new User('Mike', 12, 'test@mail.ru', '+374778899');
// let user1 = new User('John', 45, 'john@mail.com', '+374779545')
// console.log(user);
// console.log(user1);
// console.log(user.showName());
// console.log(user1.showName());
// user.nickname = 'Poxos';

// function User(_name, _age, _email, _phone_number) {
//     this.name = _name;
//     this.age = _age;
//     this.email = _email;
//     this.phone_number = _phone_number;
// this.showName = function () {
//     return this.name;
// }
// }

// User.prototype.showName = function () {
//     return this.name;
// }

// User.prototype.showEmail = function () {
//     return this.email;
// }

// let user = new User('Mike', 12, 'test@mail.ru', '+374778899');
// let user1 = new User('John', 45, 'john@mail.com', '+374779545')
// console.log(user);
// console.log(user.showName());
// console.log(user1);
// console.log(user1.showEmail());
// console.log(user.showName());
// console.log(user1.showName());

// ԳՈՐԾՆԱԿԱՆ

// function Book(_title, _pubYear, _Price) {
//     this.title = _title;
//     this.pubYear = _pubYear;
//     this.price = _Price;
// }

// Book.prototype.show = function () {
//     console.log(this.title, this.price);
// }

// let book = new Book('Անլռելի զանգակատուն', 1959, 5000)

// book.show();

// let a = new Number(45);
// console.log(a);
// console.log(typeof a);
// console.log(a.valueOf());
// console.log(a === 45);
// console.log(typeof a.valueOf());

// let arr = [];

// let arr = new Array(5);
// console.log(arr);

// let arr = new Array(5, 4, 3);
// console.log(arr);

// let obj = new Object({
//     name: 'Mike',
//     age: 12
// });

// console.log(obj);

// let pattern = new RegExp('[a-z]{5}')
// console.log(pattern);

let x = 4;
debugger;
Number.prototype.pow = function (deg) {
    return this.valueOf() ** deg;
}

console.log(x.pow(2));

// let user = {
//     name: 'Mike',
//     age: 12,
//     email: 'test@mail.ru',
//     phone_number: '+374778899',
// };

// console.log(user.hasOwnProperty('name'));
// console.log(user.hasOwnProperty('valueOf'));
// console.log(user.hasOwnProperty('text'));

// for(let key in user){
//     if (user.hasOwnProperty(key)) {

//     }
// }

// let arr = [];
// let obj = {};

// function Book(_title, _pubYear, _Price) {
//     this.title = _title;
//     this.pubYear = _pubYear;
//     this.price = _Price;
// }
// let book = new Book('Անլռելի զանգակատուն', 1959, 5000)

// console.log(book instanceof Book);
// console.log(arr instanceof Array);
// console.log(obj instanceof Array);

//Class

// class User {
//     name = 'Mike';
//     age = 12;
//     email = 'test@mail.ru';
//     phone_number = '+37495485648';
// }

// let user = new User();
// console.log(user);

// class User {
//     name = 'Mike';
//     age = 12;
//     email = 'test@mail.ru';
//     phone_number = '+37495485648';
//     constructor(_name, _age, _email, _phone_Number) {
//         this.name = _name;
//         this.age = _age;
//         this.email = _email;
//         this.phone_number = _phone_Number;
//     }
//     showName() {
//         return this.name;
//     }
// }

// let user = new User('Mike', 12, 'test@mail.ru', '+37495485648');
// let user1 = new User('John', 45, 'john@mail.ru', '+37495485648');
// console.log(user);
// console.log(user.showName());
// console.log(user.name);
// console.log(user1);
// console.log(user1.showName());

// class User {
//     name = 'Mike';
//     age = 12;
//     email = 'test@mail.ru';
//     phone_number = '+37495485648';
//     constructor(_name, _age, _email, _phone_Number) {
//         this.name = _name;
//         this.age = _age;
//         this.email = _email;
//         this.phone_number = _phone_Number;
//     }
//     _showName() {
//         return this.name;
//     }
// }

// let user = new User('Mike', 12, 'test@mail.ru', '+37495485648');
// let user1 = new User('John', 45, 'john@mail.ru', '+37495485648');
// console.log(user);
// console.log(user._showName());
// console.log(user.name);
// console.log(user1);
// console.log(user1._showName());

// class User {
//     #name = 'Mike';
//     constructor(_name, _age, _email, _phone_Number) {
//         this.#name = _name;
//         this.age = _age;
//         this.email = _email;
//         this.phone_number = _phone_Number;
//     }
//     #showName() {
//         return this.#name;
//     }
// }

// let user = new User('Mike', 12, 'test@mail.ru', '+37495485648');
// let user1 = new User('John', 45, 'john@mail.ru', '+37495485648');
// console.log(user);
// console.log(user._showName());
// console.log(user.#name);
// console.log(user[#name]);
// console.log(user.showName());

// class Book {
//     title = 'Java Script';
//     #price = '25000AMD';

//     constructor() {

//     }
//     #showtitle() {
//         return this.title;
//     }
// }

// let book = new Book();
// console.log(book);

//Ժառանգականություն

// class Display {
//     #pixel = null;
//     matrix = null;
//     size = null;
//     type = null;
//     constructor(_pixel, _matrix, _size, _type) {
//         this.pixel = _pixel;
//         this.matrix = _matrix;
//         this.size = _size;
//         this.type = _type;
//     }
//     showSize() {
//         return this.size;
//     }
// }

// class Tv extends Display {
//     model = null;
//     year = null;
//     smartType = null;
//     color = null;
//     price = null;
//     constructor(_model, _year, _smartType, _color, _price, ...params) {
//         super(...params);
//         this.model = _model;
//         this.year = _year;
//         this.smartType = _smartType;
//         this.color = _color;
//         this.price = _price;
//     }
// }

// class Phone extends Display {
//     opertionSystem = null;
//     memory = null;
//     camera = null;
//     battery = null;
//     constructor(_opertionSystem, _memory, _camera, _battery, ...params) {
//         super(...params);
//         this.opertionSystem = _opertionSystem;
//         this.memory = _memory;
//         this.camera = _camera;
//         this.battery = _battery;
//     }
// }

// let phone = new Phone('IOS', '128GB', '45PX', '4500MA', 375, '4K', '6.7inch', 'LED');
// let tv = new Tv('LG', 2023, true, 'black', 200000, 5000, 'HD', '55inch', 'OLED');

// console.log(phone.showSize());
// console.log(tv.showSize());

//Պոլիմորֆիզմ

class Display {
    #pixel = null;
    matrix = null;
    size = null;
    type = null;
    constructor(_pixel, _matrix, _size, _type) {
        this.pixel = _pixel;
        this.matrix = _matrix;
        this.size = _size;
        this.type = _type;
    }
    showSize() {
        return this.size;
    }

    showPrice() {
        if (this.matrix === '4K') {
            return 1000;
        }
        if (this.matrix === 'HD') {
            return 500;
        }

        return 700;
    }
}


class Tv extends Display {
    model = null;
    year = null;
    smartType = null;
    color = null;
    price = null;
    constructor(_model, _year, _smartType, _color, _price, ...params) {
        super(...params);
        this.model = _model;
        this.year = _year;
        this.smartType = _smartType;
        this.color = _color;
        this.price = _price;
    }
    showPrice() {
        return this.price + super.showPrice()
    }
}

let tv = new Tv('LG', 2023, true, 'black', 200000, 5000, 'HD', '55inch', 'OLED');
console.log(tv.showPrice());


// class Car {
//     static #countOfWhell = 4;
//     static #rudder = 1;
//     color;
//     brand;
//     static showWheelsCount() {
//         return Car.#countOfWhell;
//     }
//     constructor() {

//     }
// }

// let car = new Car();
// console.log(car);
// console.log(Car.rudder);
// console.log(Car.showWheelsCount());

// class Book {
//     static count = 0;
//     constructor() {
//         Book.count++
//     }
// }

// new Book();
// new Book();
// new Book();
// new Book();
// let book = new Book();
// console.log(Book.count);

//Number - ի static հատկություններ ու մեթոդներ
// console.log(Number.MAX_SAFE_INTEGER);
// console.log(Number.MIN_SAFE_INTEGER);
// console.log(Number.MAX_VALUE);
// console.log(Number.MIN_VALUE);
// console.log(Number.isNaN(NaN));
// console.log(Number.isSafeInteger(985649856241563241652));
// console.log(Number.isInteger(5));

//Array - ի static հատկություններ ու մեթոդներ

// console.log(Array.isArray([]));
// console.log(Array.of(5));
// console.log(Array.of(true, 5, false));

//Object - ի static հատկություններ ու մեթոդներ

// let obj = {
//     name: 'Mike',
//     age: 45,
//     email: 'test@mail.ru'
// }

// let obj2 = Object.assign({}, obj)
// console.log(obj2);

// console.log(Object.keys(obj));
// console.log(Object.values(obj));
// console.log(Object.entries(obj));

// console.log({} === {});

// console.log(Object.is(78, 78));
// console.log(Object.is({}, {}));
// console.log(Object.is(null, null));

// let obj = Object.freeze({
//     name: 'Mike',
//     age: 45,
//     email: 'test@mail.ru'
//     a: {name: 'Joe'}
// });

// obj.phone = 'Iphone';
// obj.name = 'John'

// console.log(delete obj.name);
// console.log(obj);
// console.log(delete obj.ppp);

// console.log(new Date);
// console.log(new Date(654657853));
// console.log(new Date(-654657853));
// console.log(new Date(2015, 1, 12, 11, 59, 45));

//Date - ի պրոտոտիպսյին մեթոդները

// console.log(new Date().getFullYear());
// console.log(new Date().getMonth());
// console.log(new Date().getDay());
// console.log(new Date().getDate());
// console.log(new Date().getMinutes());
// console.log(new Date().getSeconds());
// console.log(new Date().getMilliseconds());
// console.log(new Date().getUTCDate());
// console.log(new Date().getUTCMonth());
// console.log(new Date().getUTCHours());
// console.log(new Date().getTimezoneOffset());

// let date = new Date();
// console.log(date.setDate(date.getDate() + 5));
// console.log(date.setDate(date.getDate() - 5));
// console.log(date);

//console.log(new TypeError())
// throw new TypeError('This is a typeerror');

// class Car {
//     constructor() {
//         throw new Error();
//     }
// }

// new Car();

// try {
//     console.log(fdf);
// } catch (error) {
//     console.log(true);
// }

// try {
//     x
// } catch (error) {
//     console.log(true);
//     console.log(error.name);
//     console.log(error.message);
// }

// console.log('Hello');

// let x = +prompt('Enter a number');
// let y = +prompt('Enter second number');

// try {
//     if (y === 0) {
//         throw new Error('Թիվը 0-ի վրա բաժանել չի կարելի')
//     }
//     console.log(x / y);
// } catch (error) {
//     console.log(error.message);
// } finally {
//     console.log(true);
// }

//Screnn - ի հատկությունները

// console.log(window.screen);
// console.log(screen.width);
// console.log(screen.height);
// console.log(screen.availHeight);
// console.log(screen.availWidth);
// console.log(window.innerWidth);
// console.log(window.innerHeight);


//History - ի հատկություններն ու մեթոդները

// console.log(history.length);
// console.log(history.back());
// console.log(history.forward());
// console.log(history.go(2));
// console.log(history.go(-2));
// console.log(history.pushState());

//Location - ի հատկություններն ու մեթոդները

// console.log(location.protocol);
// console.log(location.hostname);
// console.log(location.pathname);
// console.log(location.search);
// console.log(location.hash);
// console.log(location.href);

// console.log(location.toString());
// console.log(location.assign('https://www.google.ru/'));
// console.log(location.replace('https://www.google.ru/'));

//Local Storage - ի հատկություններն ու մեթոդները

// console.log(localStorage.length);
// localStorage.setItem('name', 'Vahan');
// console.log(localStorage.getItem('name'));
// localStorage.removeItem('name');
// localStorage.clear();

//Session Storage - ի հատկություններն ու մեթոդները

// console.log(sessionStorage.length);
// sessionStorage.setItem('name', 'Vahan');
// console.log(sessionStorage.getItem('name'));
// sessionStorage.removeItem('name');
// sessionStorage.clear();

//SetTimeOut - ի մասին
// console.log(1);

// setTimeout(() => {
//     console.log(7);
// }, 10)
// setTimeout(() => {
//     console.log(8);
// }, 10)

// console.log(3);

// let timeOut = setTimeout(() => {
//     console.log(true);
// }, 10000);

// console.log(timeOut);
// clearTimeout(timeOut);

// let interval = setInterval(() => {
//     console.log(true);
// }, 1000)

// console.log(interval);

// clearInterval(interval);

// setTimeout(() => {
//     clearInterval(interval);
// })

// console.log(confirm('Message'));
// console.log();

//DOM

// let block = document.getElementById('block')
// console.log(block);

// let tags = document.getElementsByClassName('text');
// console.log(tags);
// console.log(tags.length);
// console.log(tags.item(4));
// console.log(tags[0]);

// let tags = document.getElementsByTagName('p');
// console.log(tags);

// let tag = document.querySelector('p.textone+span');
// console.log(tag);

// let tags = document.querySelectorAll('p.text');
// console.log(tags);
// console.log(tags.length);
// console.log(tags.item(1));
// console.log(tags[0]);
// tags.forEach((item, i) => {
//     console.log(item, i);
// });

// console.log(document.links);
// console.log(document.images);
// console.log(document.forms);
// console.log(document.forms[0]['name']);
// console.log(document.forms[1]['lastname']);
// console.log(document.forms['secondForm']);
// console.log(document.forms['secondForm']['lastname']);

// let div = document.getElementById('block');
// console.log(div.style.fontSize = '25px');

// let div = document.getElementsByTagName('div');
// console.log(div[0].style);
// console.log(div.item(0).style);

let div = document.getElementsByTagName('div');
div.item(0).innerHTML = '<h1>Hello JavaScript</h1>'


//Element interface - ի հատկություններն ու մեթոդները

// let div = document.createElement('div');
// div.innerHTML = 'Hello world'
// console.log(div);
// document.body.append(div);

// let ul = document.querySelector('ul.list');
// let li = document.createElement('li');
// li.innerHTML = 'List item 2';
// li.append('List item 2');
// li.style.color = 'red';

// ul.append(li);

//Շախմատ

// let chess = document.querySelector('div#block');
// let table = document.createElement('table');

// for (let i = 0; i < 8; i++) {
//     let x = document.createElement('tr');
//     let y = document.createElement('th')
//     table.append(x)
//     x.append(y);
// }

// chess.append(table)

// let ul = document.querySelector('ul.list');
// let li = document.createElement('li');

// li.prepend('List item 0');
// ul.prepend(li)

// let ul = document.querySelector('ul.list');

// console.log(ul.hasAttribute('id'));
// console.log(ul.hasAttribute('class'));

// console.log(ul.getAttribute('class'));
// console.log(ul.getAttribute('id'));
// console.log(ul.getAttribute('data-id'));

// ul.setAttribute('id', 'unorderedList');
// ul.removeAttribute('data-id');

// let ul = document.querySelector('ul.list');

// console.log(ul.classList);
// console.log(ul.classList.length);
// console.log(ul.classList[0]);
// console.log(ul.classList.item(0));
// ul.classList.add('list-item', 'green', 'red');
// ul.classList.remove('red')
// ul.classList.remove('green');
// ul.classList.replace('red', 'blue');
// ul.classList.toggle('purple');
// ul.classList.toggle('blue');
// ul.classList.forEach((item, i) => {
//     console.log(item, i);
// });
// console.log(ul.classList.toString());

// let ul = document.querySelector('ul.list');
// console.log(ul.childElementCount);
// console.log(ul.nextElementSibling);
// console.log(ul.previousElementSibling);

// let ul = document.querySelector('ul.list');
// console.log(ul.outerHTML);
// console.log(ul.children);

// let ul = document.querySelector('ul.list');

// ul.remove();

// let div = document.querySelector('div#block')
// let p = div.querySelector('p');
// let newH1 = document.createElement('h1')
// div.replaceChild(newH1, p)

let button = document.querySelector('#button');

button.addEventListener('click', () => {
    button.nextElementSibling.style.backgroundColor = `#${Math.round(Math.random() * 255)}${Math.round(Math.random() * 255)}${Math.round(Math.random() * 255)}`
});


// let button = document.getElementById('button');

//Սովորական click

// button.addEventListener('click', (event) => {
//     console.log('click');
//     console.log(event);
// })

//Երկու հատ click

// button.addEventListener('dblclick', (event) => {
//     console.log('click');
//     console.log(event);
// })

//click աջ սեղմով

// button.addEventListener('contextmenu', (event) => {
//     event.preventDefault();  //բրաուզերի կողմից կատարվող default գործողությունը անջատել
//     console.log(true);
// })

//մկնիկով վրեն պահելուց

// button.addEventListener('mouseenter', (event) => {
//     console.log(true);
// })

//մկնիկտ վրից հանելուց

// button.addEventListener('mouseleave', (event) => {
//     console.log(false);
// })

//scroll էնելուց ինչ-որ բլոկի վրա

// let block = document.getElementById('block');
// block.addEventListener('scroll', () => {
//     console.log(true);
// })

//scroll էնելուց windwow - ի վրս

// window.addEventListener('scroll', (event) => {
//     console.log(true);
//     console.log(event);
// })

//form - ի մեջի կնոպկին սեղմելուց

// let form = document.getElementById('form');
// form.addEventListener('submit', (event) => {
//     event.preventDefault();
//     console.log(event.target[0].value);
//     console.log(true);
// })

// document.forms[0]['name'].placeholder = 'Hello';

//input - ի մեջ բան գրելուց

// document.forms[0]['name'].addEventListener('input', () => {
//     console.log(true);
// })

//input - ի արժեքի փոխվելուց

// document.forms[0]['checkbox'].addEventListener('change', () => {
//     console.log(true);
// })

// document.forms[0]['name'].addEventListener('change', () => {
//     console.log(true);
// })

// document.getElementById('country').addEventListener('change', () => {
//     console.log(true);
// })

// let button = document.getElementById('button');
// button.onclick = function (params) {
//     console.log(true);
// }

// let p = document.querySelector('p');
// console.log(p.innerText);
// p.innerText = '';
// p.innerText = '<span>Text</span>'
// console.log(p.innerHTML);